logging.config=classpath:log4j2.xml
#@ConfigurationProperties(prefix = "spring.datasource")对下下面spring.datasource进行批量加载
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.url=jdbc:mysql://192.168.1.241:31111/demo_user
spring.datasource.username=root
spring.datasource.password=PAASWORD
spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.datasource.max-active=20
spring.datasource.maxWait=60000
spring.datasource.min-idle=8
spring.datasource.initial-size=10
spring.datasource.filters=stat,wall,log4j2
#springboot项目集成druid可以不需要在配置包config下写数据库配置类，直接以下面的方式进行配置
#spring.datasource.druid.db-type=com.alibaba.druid.pool.DruidDataSource
#spring.datasource.druid.driverClassName=com.mysql.jdbc.Driver
#spring.datasource.druid.url=jdbc:mysql://localhost:3306/springboot_helloword?allowMultiQueries=true&autoReconnect=true&characterEncoding=utf-8
#spring.datasource.druid.username=root
#spring.datasource.druid.password=root
# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
#spring.datasource.druid.initial-size=5
#spring.datasource.druid.min-idle=5
#spring.datasource.druid.max-active=20
# 配置获取连接等待超时的时间
#spring.datasource.druid.max-wait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
#spring.datasource.druid.filter.commons-log.connection-logger-name=stat,wall,log4j2
# 配置中心
# @EnableApolloConfig(value = {"PAAS.redis"}, order = 1)
mybatis-plus.mapper-locations=classpath:mapper/*.xml
